{
  "address": "0xc6c9274d415Cba866022cD5AB2CA29C4b964c372",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "daiToken_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "daiBridge_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "daiBridge",
      "outputs": [
        {
          "internalType": "contract DaiPartialBridge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract DaiPartialToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "depositFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "permitNonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitExpiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "permitV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "permitR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "permitS",
          "type": "bytes32"
        }
      ],
      "name": "depositWithPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x343a8a2aa0714bb5ee807e3c1a8e7270b469b757483c6f0f6de0e9572e0c840d",
  "receipt": {
    "to": null,
    "from": "0xF4AcFa4926c6C75dc79E4c2E81CbF91Edf9bc9fA",
    "contractAddress": "0xc6c9274d415Cba866022cD5AB2CA29C4b964c372",
    "transactionIndex": 201,
    "gasUsed": "384295",
    "logsBloom": "0x
    "blockHash": "0x0412357586d0180bfa1385a90b0e7c21f7114d96e4631b58fca829e2cd096426",
    "transactionHash": "0x343a8a2aa0714bb5ee807e3c1a8e7270b469b757483c6f0f6de0e9572e0c840d",
    "logs": [],
    "blockNumber": 11911982,
    "cumulativeGasUsed": "10188799",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6b175474e89094c44da98b954eedeac495271d0f",
    "0x4aa42145aa6ebf72e164c9bbc74fbd3788045016"
  ],
  "solcInputHash": "5dc922969f70607b5d1d4c64ee1df945",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"daiToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"daiBridge_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"daiBridge\",\"outputs\":[{\"internalType\":\"contract DaiPartialBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract DaiPartialToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"permitNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitExpiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"depositWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/daiBridgeProxy/DaiBridgeProxy.sol\":\"DaiBridgeProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"src/daiBridgeProxy/DaiBridgeProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.12;\\n\\ninterface DaiPartialToken {\\n    function allowance(\\n        address holder,\\n        address spender\\n    )\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(\\n        address spender,\\n        uint256 value\\n    )\\n        external\\n        returns (bool);\\n\\n    function permit(\\n        address holder,\\n        address spender,\\n        uint256 nonce,\\n        uint256 expiry,\\n        bool allowed,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    )\\n        external;\\n\\n    function transfer(\\n        address to,\\n        uint256 value\\n    )\\n        external\\n        returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    )\\n        external\\n        returns (bool);\\n}\\n\\ninterface DaiPartialBridge {\\n    function relayTokens(\\n        address from,\\n        address receiver,\\n        uint256 amount\\n    )\\n        external;\\n}\\n\\ncontract DaiBridgeProxy {\\n    uint256 constant private DAI_TOKEN_MAX_ALLOWANCE = uint(-1);\\n\\n    DaiPartialToken public daiToken;\\n    DaiPartialBridge public daiBridge;\\n\\n    constructor(address daiToken_, address daiBridge_) public {\\n        daiToken = DaiPartialToken(daiToken_);\\n        daiBridge = DaiPartialBridge(daiBridge_);\\n    }\\n\\n    function depositWithPermit(\\n        uint amount,\\n        address recipient,\\n        uint256 permitNonce,\\n        uint256 permitExpiry,\\n        uint8 permitV,\\n        bytes32 permitR,\\n        bytes32 permitS\\n    ) external {\\n        if (daiToken.allowance(msg.sender, address(this)) < amount) {\\n            daiToken.permit(\\n                msg.sender,\\n                address(this),\\n                permitNonce,\\n                permitExpiry,\\n                true,\\n                permitV,\\n                permitR,\\n                permitS\\n            );\\n        }\\n        depositFor(amount, recipient);\\n    }\\n\\n    function depositFor(uint amount, address recipient) public {\\n        daiToken.transferFrom(msg.sender, address(this), amount);\\n        if (daiToken.allowance(address(this), address(daiBridge)) < amount) {\\n            daiToken.approve(address(daiBridge), DAI_TOKEN_MAX_ALLOWANCE);\\n        }\\n        daiBridge.relayTokens(address(this), recipient, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x75e594bae242f6b86c80fd67395fc17f7016466010f7454219a0006e8c904ec9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516105b53803806105b58339818101604052604081101561003357600080fd5b508051602090910151600080546001600160a01b039384166001600160a01b0319918216179091556001805493909216921691909117905561053b8061007a6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806336efd16f146100515780634c52144d1461007f578063be22f546146100a3578063fdeeb287146100ab575b600080fd5b61007d6004803603604081101561006757600080fd5b50803590602001356001600160a01b03166100f8565b005b61008761038d565b604080516001600160a01b039092168252519081900360200190f35b61008761039c565b61007d600480360360e08110156100c157600080fd5b508035906001600160a01b036020820135169060408101359060608101359060ff6080820135169060a08101359060c001356103ab565b60008054604080517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810186905290516001600160a01b03909216926323b872dd926064808401936020939083900390910190829087803b15801561016c57600080fd5b505af1158015610180573d6000803e3d6000fd5b505050506040513d602081101561019657600080fd5b5050600054600154604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03928316602482015290518593929092169163dd62ed3e91604480820192602092909190829003018186803b15801561020a57600080fd5b505afa15801561021e573d6000803e3d6000fd5b505050506040513d602081101561023457600080fd5b505110156102fd5760008054600154604080517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248201529051919092169263095ea7b392604480820193602093909283900390910190829087803b1580156102d057600080fd5b505af11580156102e4573d6000803e3d6000fd5b505050506040513d60208110156102fa57600080fd5b50505b600154604080517fad58bdd10000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038481166024830152604482018690529151919092169163ad58bdd191606480830192600092919082900301818387803b15801561037157600080fd5b505af1158015610385573d6000803e3d6000fd5b505050505050565b6001546001600160a01b031681565b6000546001600160a01b031681565b600054604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152905189926001600160a01b03169163dd62ed3e916044808301926020929190829003018186803b15801561041457600080fd5b505afa158015610428573d6000803e3d6000fd5b505050506040513d602081101561043e57600080fd5b505110156104f25760008054604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101899052606481018890526001608482015260ff871660a482015260c4810186905260e4810185905290516001600160a01b0390921692638fcbaf0c926101048084019382900301818387803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050505b6104fc87876100f8565b5050505050505056fea26469706673582212207fa874d6031b59803bcdbc8d04e8666f01466fe37ddf099e76d3d125ee2f7da364736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806336efd16f146100515780634c52144d1461007f578063be22f546146100a3578063fdeeb287146100ab575b600080fd5b61007d6004803603604081101561006757600080fd5b50803590602001356001600160a01b03166100f8565b005b61008761038d565b604080516001600160a01b039092168252519081900360200190f35b61008761039c565b61007d600480360360e08110156100c157600080fd5b508035906001600160a01b036020820135169060408101359060608101359060ff6080820135169060a08101359060c001356103ab565b60008054604080517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810186905290516001600160a01b03909216926323b872dd926064808401936020939083900390910190829087803b15801561016c57600080fd5b505af1158015610180573d6000803e3d6000fd5b505050506040513d602081101561019657600080fd5b5050600054600154604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03928316602482015290518593929092169163dd62ed3e91604480820192602092909190829003018186803b15801561020a57600080fd5b505afa15801561021e573d6000803e3d6000fd5b505050506040513d602081101561023457600080fd5b505110156102fd5760008054600154604080517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248201529051919092169263095ea7b392604480820193602093909283900390910190829087803b1580156102d057600080fd5b505af11580156102e4573d6000803e3d6000fd5b505050506040513d60208110156102fa57600080fd5b50505b600154604080517fad58bdd10000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038481166024830152604482018690529151919092169163ad58bdd191606480830192600092919082900301818387803b15801561037157600080fd5b505af1158015610385573d6000803e3d6000fd5b505050505050565b6001546001600160a01b031681565b6000546001600160a01b031681565b600054604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152905189926001600160a01b03169163dd62ed3e916044808301926020929190829003018186803b15801561041457600080fd5b505afa158015610428573d6000803e3d6000fd5b505050506040513d602081101561043e57600080fd5b505110156104f25760008054604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101899052606481018890526001608482015260ff871660a482015260c4810186905260e4810185905290516001600160a01b0390921692638fcbaf0c926101048084019382900301818387803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050505b6104fc87876100f8565b5050505050505056fea26469706673582212207fa874d6031b59803bcdbc8d04e8666f01466fe37ddf099e76d3d125ee2f7da364736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 78,
        "contract": "src/daiBridgeProxy/DaiBridgeProxy.sol:DaiBridgeProxy",
        "label": "daiToken",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(DaiPartialToken)59"
      },
      {
        "astId": 80,
        "contract": "src/daiBridgeProxy/DaiBridgeProxy.sol:DaiBridgeProxy",
        "label": "daiBridge",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(DaiPartialBridge)69"
      }
    ],
    "types": {
      "t_contract(DaiPartialBridge)69": {
        "encoding": "inplace",
        "label": "contract DaiPartialBridge",
        "numberOfBytes": "20"
      },
      "t_contract(DaiPartialToken)59": {
        "encoding": "inplace",
        "label": "contract DaiPartialToken",
        "numberOfBytes": "20"
      }
    }
  }
}